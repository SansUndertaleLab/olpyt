(lambda args: [scope := [[{}, {}]], cond := [], loops := [], libs := {}, wl := (type("wl", (), {"__init__": (lambda self, func : ([setattr(self, "func", func), setattr(self, "broke", False), None][-1])), "__iter__": (lambda self : [self][0]), "__next__": (lambda self : ([next(iter("")) if self.broke else None, None if (self.func()) else next(iter(""))])), "stop": (lambda self : (setattr(self, "broke", True)))})), scope[0][1].__setitem__("add", (lambda args : [scope.append([{}]), scope[-1][0].__setitem__("val", args[0] + args[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("buffer", (lambda args : [scope.append([{}]), scope[-1][0].__setitem__("val", args[0]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("sub", (lambda args:  [scope.append([{}]), scope[-1][0].__setitem__("val", args[0] - args[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("mul", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", arg[0] * arg[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("div", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", arg[0] / arg[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("pow", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", arg[0] ** arg[1]), scope[-1][0]["val"], scope.pop()][-2]))])(__import__("sys").argv)