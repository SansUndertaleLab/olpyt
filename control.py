(lambda args: [scope := [[{}, {}]], cond := [], loops := [], libs := {}, scope[-1][0].__setitem__("True", True), scope[-1][0].__setitem__("False", False), scope[0][1].__setitem__("and", (lambda args: [scope.append([{}]), scope[-1][0].__setitem__("val", args[0] and args[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("or", (lambda args: [scope.append([{}]), scope[-1][0].__setitem__("val", args[0] or args[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("eq", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", arg[0] == arg[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("neq", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", arg[0] != arg[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("gt", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", arg[0] > arg[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("lt", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", arg[0] < arg[1]), scope[-1][0]["val"], scope.pop()][-2])), scope[0][1].__setitem__("not", (lambda arg: [scope.append([{}]), scope[-1][0].__setitem__("val", not arg[0]), scope[-1][0]["val"], scope.pop()][-2]))])(__import__("sys").argv)
